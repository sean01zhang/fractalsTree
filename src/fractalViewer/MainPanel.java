/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fractalViewer;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javafx.scene.shape.Line;
import javax.swing.Timer;

/**
 *
 * @author seanzhang
 */
public class MainPanel extends javax.swing.JPanel {
    kochFractal k;
    treeFractal tF;
    Timer t;
    int mode;

    /**
     * Creates new form FractalsPanel
     */
    public MainPanel() {

        initComponents();
        t = new Timer(500, new TimerListener());
        mode = 0;
    }

    public void startTimer() {
        t.start();
        k = new kochFractal(6,0,this.getHeight() - 10,0,this.getWidth());
        tF = new treeFractal(10,100,0.7,30,100,this.getHeight() - 10,270);
    }

    public void setMode(int x) {
        mode = x;
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        
        if (mode == 1) {
            tF.drawTree(g);
        } else {
            k.drawCurve(g);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved

        if (mode == 0) {
            k.setScaleFactor(k.getScaleFactor()+((double) evt.getWheelRotation() / 10));
            
            if (evt.getWheelRotation() > 0) {
                k.setDepth(k.getDepth()+0.035);
            } else {
                k.setDepth(k.getDepth()-0.035);
            }
        } else {
            tF.setScaleFactor(tF.getScaleFactor()+((double) evt.getWheelRotation() / 10));
            
            if (evt.getWheelRotation() > 0) {
                tF.setDepth(tF.getDepth()+0.035);
            } else {
                tF.setDepth(tF.getDepth()-0.035);
            }
        }

    }//GEN-LAST:event_formMouseWheelMoved

    int initX, initY;
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if(mode==0) {
            k.setStartx(k.getStartx()+evt.getX()-initX);
            k.setStarty(k.getStarty()+evt.getY()-initY);
        } else {
            tF.setStartX(tF.getStartX()+evt.getX()-initX);
            tF.setStartY(tF.getStartY()+evt.getY()-initY);
        }
        initX = evt.getX();
        initY = evt.getY();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased

    }//GEN-LAST:event_formMouseReleased

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        initX = evt.getX();
        initY = evt.getY();
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            repaint();

        }

    }
}
